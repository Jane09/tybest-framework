package com.tybest.base.tree;

/**
 * B-Tree = BTree
 * B树和平衡二叉树稍有不同的是B树属于多叉树又名 平衡多路查找树（查找路径不只两个）
 *
 * （1）排序方式：所有节点关键字是按递增次序排列，并遵循左小右大原则；
 *
 * （2）子节点数：非叶节点的子节点数>1，且<=M ，且M>=2，空树除外（注：M阶代表一个树节点最多有多少个查找路径，M=M路,当M=2则是2叉树,M=3则是3叉）；
 *
 * （3）关键字数： M-1>= 枝节点的关键字数量 >= ceil(m/2)-1 （注：ceil()是个朝正无穷方向取整的函数 如ceil(1.1)结果为2);
 *
 * （4）所有叶子节点均在同一层、叶子节点除了包含了关键字和关键字记录的指针外也有指向其子节点的指针 只不过其指针地址都为null 对应下图最后一层节点的空格子;
 *
 * @author tb
 * @date 2019/1/8 17:05
 */
public class BTree {

    public static void main(String[] args) {

    }
}
